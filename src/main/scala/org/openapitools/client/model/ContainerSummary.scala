/**
 * Docker Engine API The Engine API is an HTTP API served by Docker Engine. It is the API the Docker
 * client uses to communicate with the Engine, so everything the Docker client can do can be done
 * with the API. Most of the client's commands map directly to API endpoints (e.g. `docker ps` is
 * `GET /containers/json`). The notable exception is running containers, which consists of several
 * API calls. # Errors The API uses standard HTTP status codes to indicate the success or failure of
 * the API call. The body of the response will be JSON in the following format: ``` { \"message\":
 * \"page not found\" } ``` # Versioning The API is usually changed in each release, so API calls
 * are versioned to ensure that clients don't break. To lock to a specific version of the API, you
 * prefix the URL with its version, for example, call `/v1.30/info` to use the v1.30 version of the
 * `/info` endpoint. If the API version specified in the URL is not supported by the daemon, a HTTP
 * `400 Bad Request` error message is returned. If you omit the version-prefix, the current version
 * of the API (v1.43) is used. For example, calling `/info` is the same as calling `/v1.43/info`.
 * Using the API without a version-prefix is deprecated and will be removed in a future release.
 * Engine releases in the near future should support this version of the API, so your client will
 * continue to work even if it is talking to a newer Engine. The API uses an open schema model,
 * which means server may add extra properties to responses. Likewise, the server will ignore any
 * extra query parameters and request body properties. When you write clients, you need to ignore
 * additional properties in responses to ensure they do not break when talking to newer daemons. #
 * Authentication Authentication for registries is handled client side. The client has to send
 * authentication details to various endpoints that need to communicate with registries, such as
 * `POST /images/(name)/push`. These are sent as `X-Registry-Auth` header as a [base64url
 * encoded](https://tools.ietf.org/html/rfc4648#section-5) (JSON) string with the following
 * structure: ``` { \"username\": \"string\", \"password\": \"string\", \"email\": \"string\",
 * \"serveraddress\": \"string\" } ``` The `serveraddress` is a domain/IP without a protocol.
 * Throughout this structure, double quotes are required. If you have already got an identity token
 * from the [`/auth` endpoint](#operation/SystemAuth), you can just pass this instead of
 * credentials: ``` { \"identitytoken\": \"9cbaf023786cd7...\" } ```
 *
 * The version of the OpenAPI document: 1.43
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package org.openapitools.client.model

case class ContainerSummary(
    /* The ID of this container */
    id: Option[String] = None,
    /* The names that this container has been given */
    names: Option[Seq[String]] = None,
    /* The name of the image used when creating this container */
    image: Option[String] = None,
    /* The ID of the image that this container was created from */
    imageID: Option[String] = None,
    /* Command to run when starting the container */
    command: Option[String] = None,
    /* When the container was created */
    created: Option[Long] = None,
    /* The ports exposed by this container */
    ports: Option[Seq[Port]] = None,
    /* The size of files that have been created or changed by this container */
    sizeRw: Option[Long] = None,
    /* The total size of all the files in this container */
    sizeRootFs: Option[Long] = None,
    /* User-defined key/value metadata. */
    labels: Option[Map[String, String]] = None,
    /* The state of this container (e.g. `Exited`) */
    state: Option[String] = None,
    /* Additional human-readable status of this container (e.g. `Exit 0`) */
    status: Option[String] = None,
    hostConfig: Option[ContainerSummaryHostConfig] = None,
    networkSettings: Option[ContainerSummaryNetworkSettings] = None,
    mounts: Option[Seq[MountPoint]] = None)
